#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/reset.h>

#define BASE 0
#define NUM 1
#define SYM 2
#define FUNC 3

#define ______ &trans

/*                KEY POSITIONS
     ╭────────────────────╮ ╭────────────────────╮
     │  0   1   2   3   4 │ │  5   6   7   8   9 │
     │ 10  11  12  13  14 │ │ 15  16  17  18  19 │
     │ 20  21  22  23  24 │ │ 25  26  27  28  29 │
     ╰───────╮ 30  31  32 │ │ 33  34  35╭────────╯
             ╰────────────╯ ╰───────────╯            */


&mt {
  tapping-term-ms = <200>;
  flavor = "tap-preferred";
};

&lt {
    tapping-term-ms = <190>; // This is the value already set by default
    quick-tap-ms = <250>;
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <NUM SYM>;
            then-layer = <FUNC>;
        };
    };

    behaviors {
        seco: semi_comma {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp SEMI>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
	dotco: dot_comma {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp COLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

	hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
	};
 
	shm: shift_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <220>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
	};

	 // Tap dance single tap = C double tap = copy(linux) 
        copy_dance: tapdance_copy {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&kp C>, <&kp C_AC_COPY>;
        };
        // Tap dance single tap = V double tap = paste(linux) 
        paste_dance: tapdance_paste {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&kp V>, <&kp C_AC_PASTE>;
        };
	// Tap dance single tap = X double tap = cut(linux)
        cut_dance: tapdance_cut {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&kp X>, <&kp C_AC_CUT>; 
        };
        // Tap dance single tap = . double tap = SPACE(for NUM layer)
        dot_spc: dot_space {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp DOT>, <&kp SPACE>;
        };
        // Tap dance single tap = H double tap = Raycast/Krunner seach (ALT + space)

        search_dance: tapdance_search {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&kp H>, <&kp LA(SPACE)>;
	};
    };
    

    macros {
	// Macro to exit vim: ESC : W Q
	vim_wq: vim_quit {
	    compatible = "zmk,behavior-macro";
	    #binding-cells = <0>;
	    bindings = <&macro_tap &kp ESC &kp COLON &kp W &kp Q &kp ENTER>;
	};

	// Macro to force  exit vim: ESC : Q !
        vim_q: vim_quit_force {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp ESC &kp COLON &kp Q &kp EXCL &kp ENTER>;
        };

	// Force close window: Alt + Fn4 
        fclose: force_close {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LALT &kp F4>;
        };
    };


    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "BASE";
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
        &kp Q       &kp W         &kp E          &kp R          &kp T             &kp Y         &kp U         &kp I         &kp O       &kp P
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
      &shm LSHIFT A  &hm LGUI S   &hm LALT D   &hm LCTRL  F     &kp G           &kp H        &hm RCTRL J   &hm RALT  K   &hm RGUI L  &shm RSHIFT SQT 
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
        &kp Z        &kp X         &kp C       &kp V            &kp B           &kp N         &kp M         &seco         &dotco        &kp FSLH
// ╰─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────╯
                    		  &kp TAB      &lt NUM SPACE  &kp ESC          &kp ENTER   &lt SYM BSPC     &kp ESC
//                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
           >;
        };
	num_layer {
            display-name  = "NUM";
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
       &vim_wq     &kp UNDER     &kp HASH      &kp DLLR       &kp AT              &kp PLUS       &kp N7        &kp N8       &kp N9       &kp EQUAL
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
       &kp DELETE  &kp TILDE     &hm LALT GRAVE  &kp PRCNT     &kp EXCL         &kp MINUS      &kp N4        &kp N5       &kp N6       &kp N0
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
       &vim_q        &kp BSLH      &kp PIPE      &kp AMPS     &kp CARET         &kp STAR        &kp N1        &kp N2       &kp N3       &kp SLASH 
// ╰─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────╯
                                  &kp LGUI      ______         ______          &dot_spc       ______       &kp RALT
//                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
          >;
        };

        sym_layer {
            display-name  = "SYM";
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
         &kp LT       &kp GT         &kp LBRC      &kp RBRC   &kp LG(PG_UP)   &kp C_PREVIOUS &kp C_VOL_DN &kp C_VOL_UP  &kp C_NEXT    &kp C_PP    
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
        &kp LBKT     &kp RBKT       &kp LPAR      &kp RPAR     &kp PG_UP        &kp LEFT        &kp DOWN     &kp UP       &kp RIGHT     &kp SEMI
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     ______        ______          ______        ______       &kp PG_DN      &kp LG(LEFT)  &kp LG(DOWN) &kp LG(UP) &kp LG(RIGHT)    &kp COLON 
// ╰─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────╯
                                   &kp LGUI     ______        ______             ______        ______        ______
//                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
           >;
        };

        func_layer {
            display-name = "FUNC";
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &bt BT_CLR    &bt BT_NXT    &bt BT_PRV    &bootloader   &sys_reset       &sys_reset    &bootloader    &none         &none       &studio_unlock
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
       &kp F1        &kp F2        &kp F3        &kp F4        &kp F5           &kp F6         &kp F7       &kp F8        &kp F9         &kp F10
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
       ______        ______        ______      &kp LALT(F4)       &kp F11		&kp F12	       ______	     ______        ______        ______   
// ╰─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────╯
                                   ______        ______        ______            ______        ______        ______
//                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
           >;
        };
    }; // end keymap
};
